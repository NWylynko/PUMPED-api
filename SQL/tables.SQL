CREATE TABLE "Shoe" (
  "ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "name" TEXT NOT NULL,
  "description" TEXT NOT NULL,
  "price" INTEGER NOT NULL,
  "releaseDate" INTEGER NOT NULL,
  "BrandID" INTEGER NOT NULL,
  "StyleID" INTEGER NOT NULL,
  "SectionID" INTEGER NOT NULL,
  "CollectionID" INTEGER,
  "CoverImage" INTEGER,
  FOREIGN KEY("BrandID") REFERENCES "Brand"("ID"),
  FOREIGN KEY("StyleID") REFERENCES "Style"("ID"),
  FOREIGN KEY("SectionID") REFERENCES "Section"("ID"),
  FOREIGN KEY("CollectionID") REFERENCES "Collection"("ID"),
  FOREIGN KEY("CoverImage") REFERENCES "Image"("ID")
);

CREATE TABLE "ShoeTag" (
  "ShoeID" INTEGER NOT NULL,
  "TagID" INTEGER NOT NULL,
  PRIMARY KEY("ShoeID", "TagID"),
  FOREIGN KEY("TagID") REFERENCES "Tag"("ID"),
  FOREIGN KEY("ShoeID") REFERENCES "Shoe"("ID")
);

CREATE TABLE "Tag" (
  "ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "tag" TEXT NOT NULL
);

CREATE TABLE "Stock" (
  "ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "ShoeID" INTEGER NOT NULL,
  "size" INTEGER NOT NULL,
  "stock" INTEGER NOT NULL,
  FOREIGN KEY("ShoeID") REFERENCES "Shoe"("ID")
);

CREATE TABLE "Colour" (
  "ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "ShoeID" INTEGER NOT NULL,
  "colour" TEXT NOT NULL,
  "hex" TEXT NOT NULL,
  FOREIGN KEY("ShoeID") REFERENCES "Shoe"("ID")
);

CREATE TABLE "ColourImage" (
  "ColourID" INTEGER NOT NULL,
  "ImageID" INTEGER NOT NULL,
  PRIMARY KEY("ColourID", "ImageID"),
  FOREIGN KEY("ImageID") REFERENCES "Image"("ID"),
  FOREIGN KEY("ColourID") REFERENCES "Colour"("ID")
);

CREATE TABLE "Brand" (
  "ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "name" TEXT NOT NULL,
  "website" TEXT,
  "icon" INTEGER,
  FOREIGN KEY("icon") REFERENCES "Image"("ID")
);

CREATE TABLE "Style" (
  "ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "name" TEXT NOT NULL
);

CREATE TABLE "Section" (
  "ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "name" TEXT NOT NULL
);

CREATE TABLE "Collection" (
  "ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "name" TEXT NOT NULL
);

CREATE TABLE "Image" (
  "ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "name" INTEGER,
  "height" INTEGER,
  "width" INTEGER,
  "high" INTEGER,
  "medium" INTEGER,
  "low" INTEGER,
  "tiny" INTEGER
);

CREATE TABLE "Review" (
  "ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "CustomerID" INTEGER NOT NULL,
  "stars" INTEGER NOT NULL CHECK(
    stars >= 0
    AND stars <= 5
  ),
  "message" TEXT,
  "timestamp" timestamp,
  FOREIGN KEY("CustomerID") REFERENCES "Customer"("ID")
);

CREATE TABLE "Customer" (
  "ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "firstName" TEXT NOT NULL,
  "lastName" TEXT NOT NULL
);

CREATE TABLE "WishList" (
  "CustomerID" INTEGER NOT NULL,
  "ShoeID" INTEGER NOT NULL,
  "StockID" INTEGER NOT NULL,
  "ColourID" INTEGER NOT NULL,
  PRIMARY KEY("CustomerID", "ShoeID", "StockID", "ColourID"),
  FOREIGN KEY("StockID") REFERENCES "Stock"("ID"),
  FOREIGN KEY("CustomerID") REFERENCES "Customer"("ID"),
  FOREIGN KEY("ShoeID") REFERENCES "Shoe"("ID"),
  FOREIGN KEY("ColourID") REFERENCES "Colour"("ID")
);

CREATE TABLE "Cart" (
  "CustomerID" INTEGER NOT NULL,
  "ShoeID" INTEGER NOT NULL,
  "StockID" INTEGER NOT NULL,
  "ColourID" INTEGER NOT NULL,
  "quantity" INTEGER NOT NULL,
  PRIMARY KEY("CustomerID", "ShoeID", "StockID", "ColourID"),
  FOREIGN KEY("StockID") REFERENCES "Stock"("ID"),
  FOREIGN KEY("CustomerID") REFERENCES "Customer"("ID"),
  FOREIGN KEY("ShoeID") REFERENCES "Shoe"("ID"),
  FOREIGN KEY("ColourID") REFERENCES "Colour"("ID")
);

CREATE TABLE "Order" (
  "ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "CustomerID" INTEGER NOT NULL,
  "dateOfPurchase" INTEGER NOT NULL,
  "paid" INTEGER NOT NULL,
  "deliveryAddress" TEXT NOT NULL,
  FOREIGN KEY("CustomerID") REFERENCES "Customer"("ID")
);

CREATE TABLE "OrderItem" (
  "OrderID" INTEGER NOT NULL,
  "ShoeID" INTEGER NOT NULL,
  "StockID" INTEGER NOT NULL,
  "ColourID" INTEGER NOT NULL,
  "quantity" INTEGER NOT NULL DEFAULT 1,
  "price" INTEGER NOT NULL,
  PRIMARY KEY("OrderID", "ShoeID", "StockID", "ColourID"),
  FOREIGN KEY("ShoeID") REFERENCES "Shoe"("ID"),
  FOREIGN KEY("OrderID") REFERENCES "Order"("ID"),
  FOREIGN KEY("StockID") REFERENCES "Stock"("ID"),
  FOREIGN KEY("ColourID") REFERENCES "Colour"("ID")
);
